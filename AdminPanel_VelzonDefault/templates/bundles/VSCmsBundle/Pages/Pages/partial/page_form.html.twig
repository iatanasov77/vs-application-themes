{% import "@VSApplication/Macros/form.html.twig" as vs_form %}
{% import "@VSApplication/Macros/tree.html.twig" as vs_tree %}

    
{% if formErrors is defined %}
    {{ vs_form.errors( formErrors ) }}
{% endif %}
    
{% if(item.id) %}{% set method = "PUT" %}{% else %}{% set method = "POST" %}{% endif %}
{{ form_start(form, { 'method': method }) }}

    {{ form_widget( form.tagsInputWhitelist, { 'value' : pageTags | join(',') } ) }}

    <div class="form-check form-check-secondary mb-3">
        <input type="checkbox" id="page_form_enabled" name="page_form[enabled]" 
            class="form-check-input"
            {% if item.enabled %}checked="checked"{% endif %}
        />
        <label class="form-check-label" for="page_form_enabled">
            {{ 'vs_cms.form.page.published' | trans( {},'VSCmsBundle' ) }}
        </label>
    </div>
    
    <div class="form-group">
        {{ form_label(form.locale, null, {
            'label_attr': {'class': 'form-label'}
            }) 
        }}
        
        {{ form_widget(form.locale, {'attr': {'class': 'form-select'}}) }}
    </div>
    
    {# Documentation: https://www.jeasyui.com/documentation/combotree.php #}
    {% if item.id %}{% set itemId = item.id %}{% else %}{% set itemId = 0 %}{% endif %}
    {% set comboDataSourceUrl  = url('vs_cms_pages_tree_combo_with_selected', {'pageId': itemId, 'taxonomyId': taxonomyId}) %}
    {% set comboTreePlaceholder = 'vs_cms.form.page.categories_placeholder' | trans( {},'VSCmsBundle' ) %}
    <div class="form-group">
        {{ form_label(form.category_taxon, null, {
            'label_attr': {'class': 'col-form-label'}
            }) 
        }}
        
        {{ vs_tree.easyuiCombobox( form.category_taxon, comboDataSourceUrl, itemId,
            {
                'elementSelector': '#user_role_form_parent',
                'required': 'true',
                'multiple': 'true',
                'checkbox': 'true',
                'cascadeCheck': 'false',
                'placeholder': comboTreePlaceholder
            }
        ) }}
    </div>
    
    <div class="form-group">
        {{ form_label(form.title, null, {
            'label_attr': {'class': 'form-label'}
            }) 
        }}
        
        {{ form_widget(form.title, {'attr': {'class': 'form-control'}}) }}
    </div>
    
    <div class="form-group">
        {{ form_label(form.description, null, {
            'label_attr': {'class': 'form-label'}
            }) 
        }}
        
        {{ form_widget(form.description, {'attr': {'class': 'form-control'}}) }}
    </div>
    
    <div class="form-group">
        {{ form_label(form.tags, null, {
            'label_attr': {'class': 'form-label'}
            }) 
        }}
        
        {{ form_widget(form.tags, {'attr': {'class': 'form-control'}}) }}
    </div>
    
    <div class="form-group">
        {{ form_label(form.text, null, {
            'label_attr': {'class': 'col-form-label'}
            }) 
        }}
        {{ form_widget(form.text, {'attr': {'class': 'form-control'}}) }}
    </div>
    
    {{ vs_form.buttons( form, metadata is defined ? metadata : null ) }}
    
{{ form_end(form, {'render_rest': false}) }}
